hipergeometrica <- function(N_vec, n_vec, n_tot, N_tot) {
res <- 1
for (i in 1:length(n_vec)) {
res <- res * choose(N_vec[i], n_vec[i])
}
return (res / choose(N_tot, n_tot))
}
gaseste_N_tot <- function(N_alb, N_negru, n_alb, n_negru) {
for (N_total in 1:100) {  # presupun nr soareci
p_ambii_albi <- hipergeometrica(c(N_alb, N_negru), c(n_alb, n_negru), n_alb, N_total)
p_niciun_alb <- hipergeometrica(c(N_alb, N_negru), c(0, n_negru), n_alb, N_total)
if (p_ambii_albi == 2 * p_niciun_alb) {
return(N_total)
}
}
return(NULL)  # daca nu gasesc solutie
}
# Utilizare:
N_alb <- 2
N_negru <- 2
n_alb <- 2
n_negru <- 2
N_total_gasit <- gaseste_N_tot(N_alb, N_negru, n_alb, n_negru)
print(N_total_gasit)
print(N_total_gasit)
poisson <- function(n_tot, p_vec, q_vec, t) {
prod <- 1
for(i in 1:length(n_tot)) {
prod <- prod * ((p_vec[i] * t) + q_vec[i])
}
return (prod)
}
set.seed(42)  # Pentru reproducibilitate
valori_poisson <- rpois(1e6, lambda = 5)
# Scădem 5 și înmulțim cu 2 * 10^5
valori_transformate <- (valori_poisson - 5) * 2e5
# Facem o histogramă
hist(valori_transformate, main = "Histograma Valorilor Transformate", xlab = "Valori Transformate")
pascal <- function (p, q, k) {
return (p * q ^ (k - 1))
}
# Utilizare:
p <- 0.187
q <- 0.813
k <- 4
#o utilizare
prob <- pascal(p, q, k)
print(prob)
# nr exp
num_exp <- 1e6
# vector de rezulatte
results <- numeric(num_exp)
# rulez de 10^6 ori
for (i in 1:num_exp) {
results[i] <- pascal(p, q, k)
}
# Printez primele rezultate:
print(head(results))
#############################
# Rezolvare ex 8
# Schema cu bila nerevenita - HIPERGEOMETRICA - programul general, rezolvarea problemei este sub conditie
hipergeometrica <- function (N_vec, n_vec, n_tot, N_tot) {
res <- 1
for(i in 1:length(n_vec)) {
res <- comb(N_vec[i], n_vec[i])
}
return (res / comb(N_tot, n_tot))
}
# Utilizare :
N_vec <- c(1, 2, 3, 4)
n_vec <- c(1, 1, 2, 3)
n_tot <- 4  # 4 soareci
N_tot <- 10
p <- hipergeometrica(N_vec, n_vec, n_tot, N_tot)
pascal <- function (p, q, k) {
return (p * q ^ (k - 1))
}
# Utilizare:
p <- 0.187
q <- 0.813
k <- 4
#o utilizare
prob <- pascal(p, q, k)
print(prob)
# nr exp
num_exp <- 1e6
# vector de rezulatte
results <- numeric(num_exp)
# rulez de 10^6 ori
for (i in 1:num_exp) {
results[i] <- pascal(p, q, k)
}
# Printez primele rezultate:
print(head(results))
